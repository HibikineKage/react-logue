version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm run test-ci
      - run:
          name: code-coverage
          command:
            - 'npm i -D codecov'
            - './node_modules/.bin/codecov'
      #- codecov/upload:
      #    file: { { coverage_report_filepath } }
      - store_artifacts: # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results.xml
          prefix: tests
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: coverage
          prefix: coverage
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results.xml
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
  build_deploy:
    docker:
      - image: node:10
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - '8f:d2:b9:26:ef:0f:ee:5f:79:bc:c6:8e:1c:97:be:40'
      - run:
          name: npm install
          command: npm ci
      - run:
          name: build
          command: npm run build
      - run:
          name: Deploy
          command: |
            git config --global user.name "Circle CI"
            git config --global user.email "<>"
            npm run deploy
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - build_deploy:
          filters:
            branches:
              only:
                - master
